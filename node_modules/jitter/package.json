{
  "name": "jitter",
  "description": "Simple continuous compilation for CoffeeScript",
  "keywords": [
    "coffeescript",
    "compiler"
  ],
  "author": {
    "name": "Trevor Burnham"
  },
  "version": "1.2.1",
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "engines": {
    "node": ">=0.4.0",
    "coffee-script": ">=1.1.0"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/jitter",
  "bin": {
    "jitter": "./bin/jitter"
  },
  "dependencies": {
    "sink": "0.1.1 - 0.2.99",
    "coffee-script": ">= 1.1.0"
  },
  "readme": "# Jitter\n\nSimple continuous compilation for [CoffeeScript](http://coffeescript.org), from the author\nof *[CoffeeScript: Accelerated JavaScript Development](http://pragprog.com/titles/tbcoffee/coffeescript)*.\n\nJitter watches for new files and changes to files in the CoffeeScript source directory\nyou specify, and compiles new JavaScript files as needed. No flags, no worries, just the\nsweet CoffeeScript compilation you need when you need it.\n\n***Bonus!*** Jitter gives you Growl notifications when compilation fails! See below for\ndetails.\n\n***Extra bonus!*** Jitter lets you automatically compile and run a second set of code after\neach successful compilation. That means that console-based tests are a breeze.\n\n***Extra, extra bonus!*** Jitter only replaces JS files when necessary (that is, when your\nCoffeeScript and JavaScript are out of sync). So no more meaningless timestamp changes!\n\n\n## Installing\n\nYou'll need to install [Node.js](http://nodejs.org) and [npm](http://npmjs.org/), the\nNode Package Manager. If you don't already have CoffeeScript installed (check with\n`require('coffee-script')` from Node), run\n\n    npm install -g coffee-script\n\n(The `-g` flag tells npm that you want to do a *global* install, rather than just making\nthe library available to a particular project.) And adding Jitter is just as easy:\n\n    npm install -g jitter\n\nMake sure that the `bin` directory that `coffee` and `jitter` are installed to is on\nyour PATH.\n\n### From source\n\nTo build and install Jitter from source:\n\n    git clone git://github.com/TrevorBurnham/Jitter.git\n    cd Jitter\n    npm install -g\n\n## To use:\n\n### From the command line\n\nLet's say you have a bunch of `*.coffee` files in the `coffee` directory, and want to\ncompile them to the `js` directory. Then run:\n\n    jitter coffee js\n\nJitter runs in the background until you terminate it (Ctrl+C), watching for new changes.\n\nOr let's say you want to take `*.coffee` files from the `src` directory and compile them\nto the current directory. Then run\n\n    jitter src .\n\nTo automatically run your tests after each change, specify a test directory:\n\n    jitter coffee js test\n\nTo generate source maps alongside the JavaScript files (Coffee will add the directives automatically):\n\n\tjitter coffee js -m\n\nTo compile the JavaScript without the top-level function safety wrapper:\n\n\tjitter coffee js -b\n\nAs an example, this would watch the coffee folder, compile into the js folder, generate sourcemaps, and run the tests:\n\n\tjitter coffee js test -m\n\nIf you don't want to hear a beep sound on errors, pass '-s' as an option:\n\n    jitter coffee js -s\n\nTests will be compiled to js in place, then executed with node. Tests are automatically\nre-executed when changed.\n\n### From your own module or script\n\nJitter may be required from within your module:\n\n```js\nvar jitter = require('jitter');\n```\n\nAnd started, with output (currently) being directed straight to your stdout:\n\n```js\njitter('src', 'lib');\n```\n\nOr if you have a suite of tests you'd like to run as well (as above):\n\n```js\njitter('src', 'lib', 'test');\n```\n\n## Growl notifications\n\nJitter will display a growl notification whenever compilation fails, provided that you\nhave [growlnotify](http://growl.info/extras.php) installed and on your PATH. This allows\nyou to run Jitter silently in the background, not worrying about it until you get a\nsyntax error.\n\nGrowl notifications are also shown if an error is encountered while running a test,\nincluding uncaught `AssertionError`s.\n\n## Credits\n\nOriginally written by [Trevor Burnham](http://github.com/TrevorBurnham). Updated to\nCoffeeScript 0.9 by [cj](http://github.com/cj). Growl notification code pulled from work\nby [Andrey Tarantsov](http://www.tarantsov.com/). Post-compile hook code added by Scott\nWadden ([hiddenbek](http://github.com/hiddenbek)). Various patches by Nao izuka ([iizukanao](https://github.com/iizukanao)). Source maps support by Aria Minaei ([AriaMinaei](https://github.com/AriaMinaei)).\n\n## Copyright\n\nCopyright (c) 2011 Trevor Burnham\nhttp://trevorburnham.com\n\nBased on command.coffee by Jeremy Ashkenas\nhttp://jashkenas.github.com/coffee-script/documentation/docs/command.html\n\nMIT licensed:\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.markdown",
  "_id": "jitter@1.2.1",
  "dist": {
    "shasum": "b4afc9b236eda3f08f7a873c237ef1f44066d0b8"
  },
  "_from": "jitter@",
  "_resolved": "https://registry.npmjs.org/jitter/-/jitter-1.2.1.tgz"
}
