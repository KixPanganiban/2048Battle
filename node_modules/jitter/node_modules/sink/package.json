{
  "name": "sink",
  "version": "0.1.1",
  "description": "Untangle async code",
  "author": {
    "name": "Scott Wadden"
  },
  "homepage": "http://github.com/hiddenbek/sink",
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/sink",
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "engines": {
    "node": ">=0.1.99",
    "coffee-script": ">= 0.9.2"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/hiddenbek/sink.git"
  },
  "readme": "# sink\n\nsink is a pair of simple sequence functions for untangling async code.\n    \n    {q} = require 'sink'\n    for name, dir of dirs \n      q path.exists, dir, (exists) ->\n        die \"#{dir} doesn't exist\" unless exists\n    q -> puts \"looks good.\"\n\n## q\n\nThe `q` function takes either a single callback, or a function, optional args, and a callback.  `q` calls can be made from anywhere.\n\n    q process.nextTick ->\n      puts \"In the town\"\n      q process.nextTick -> puts \"where I was born\"\n    q -> puts \"There lived a man\"\n    q process.nextTick -> puts \"Who sailed the sea\"\n    q -> puts \"The end!\"\n\n## q.parallel\n\n`q.parallel` runs a series of callbacks concurrently.  The next `q`'d function won't fire until they've all completed. \n\n    wait = (time, cb) -> setTimeout cb, time \n    q.parallel (p) ->\n      p wait, 100, -> puts \"A\"\n      p wait, 50, -> puts \"B\"\n      p wait, 0, -> puts \"C\"\n    q -> puts \"Now I know my CBAs\"\n\n## The Good\n\nsink is only 20 lines long, and should more or less do what is expected even with complicated nesting.  It allows for a succinct style and leads to more readable code than nested callbacks, and provides greater freedom than other step type libraries.\n\n## The Bad\n\nI don't really know what I'm doing.  This has only been tested on toy projects, and has no error handling baked in.  There's only a single global `q`, so this will fall down badly if you perform non parallel actions during web requests, as each request will have to wait its turn.  Per request `q`s will be added soon.\n",
  "readmeFilename": "README.md",
  "_id": "sink@0.1.1",
  "dist": {
    "shasum": "e77a977ff14ed9d0a1c1a2f2dd28d87cd7bc7026"
  },
  "_from": "sink@0.1.1 - 0.2.99",
  "_resolved": "https://registry.npmjs.org/sink/-/sink-0.1.1.tgz"
}
